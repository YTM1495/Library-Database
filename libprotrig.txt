DELIMITER//
CREATE PROCEDURE display_member(IN userID INT,IN password VARCHAR(20),OUT name VARCHAR(20),OUT address VARCHAR(20),OUT contactno INT,OUT membertype VARCHAR(20),OUT bookid INT,OUT borrowdate DATETIME,OUT returndate DATETIME,OUT fine_id INT,OUT amount DECIMAL(10,2),OUT status VARCHAR(20))
BEGIN
SELECT name,address,contact_no,member_type INTO name,address,contactno,membertype FROM member WHERE member_id=userID;
SELECT book_id,borrow_date,return_date INTO bookid,borrowdate,returndate FROM Borrows WHERE member_id=userID;
SELECT fine_id,amount,status INTO fine-id,amount,status FROM Fine WHERE member_id=userID;
END//

DELIMITER//
CREATE PROCEDURE display_librarian(IN userID INT,IN password VARCHAR(20),OUT book_id INT,OUT book_name VARCHAR(20),OUT book_price DECIMAL(10,2),OUT book_status VARCHAR(20),OUT publish_date DATETIME,OUT publisher_code INT,OUT name VARCHAR(20),OUT address VARCHAR(20),OUT contactno INT,OUT membertype VARCHAR(20) )
BEGIN 
SELECT book_id INTO book_id FROM IsuuedBy WHERE librarian_id=userID;
SELECT fine_id INTO fine_id FROM ManagesFine WHERE librarian_id=userID;
SELECT book_name ,book_price ,book_status , publish_date, publisher_code INTO book_name ,book_price ,book_status , publish_date, publisher_code FROM Books WHERE book_id=book_id;
SELECT member_id INTO member_id FROM Fine WHERE fine_id=fine_id;
SELECT name,address,contact_no,member_type INTO name,address,contactno,membertype FROM member WHERE member_id=member_id;
END//


DELIMITER//
CREATE PROCEDURE new_member(IN name_new VARCHAR(20),IN address_new VARCHAR(20),IN contactNO_new INT,IN member_type_new VARCHAR(20))
BEGIN
INSERT INTO Members (name,address,contact _no,member_type)VALUES(name_new,address_new,contactNO_new,member_type_new);
END//


DELIMITER//
CREATE PROCEDURE remove_member()
BEGIN 
SELECT member_id INTO member_id WHERE fine_date <DATE_SUB(CURDATE(),INTERVAL 1 MONTH);
DELETE FROM Member WHERE member_id=member_id;
END//


DELIMITER//
CREATE PROCEDURE add_book(IN book_name_new VARCHAR,IN book_price_new DECIMAL(10,2),IN book_status_new VARCHAR(20),IN publish_date_new DATETIME,IN publisher_code_new INT)
BEGIN
INSERT INTO Books(book_name,book_price,book_status,publish_date,publisher_code)VALUES(book_name_new,book_price_new,book_status_new,publish_date_new,publisher_code_new);
END//


DELIMITER//
CREATE PROCEDURE display_books()
BEGIN 
SELECT * FROM Books;
END//

CREATE PROCEDURE take_book(IN bookname VARCHAR(20),IN authorname VARCHAR(20))
BEGIN
SELECT book_count INTO book_count WHERE book_name=bookname;
SET book_count=book_count+1;
END//


DELIMITER//
CREATE TRIGGER book_count 


